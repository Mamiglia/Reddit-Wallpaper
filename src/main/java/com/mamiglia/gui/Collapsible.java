package com.mamiglia.gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import java.awt.*;

class Collapsible extends JPanel {
	private static final ImageIcon COLLAPSE_ICO = new ImageIcon("src/main/resources/collapse_ico.png");
	private static final ImageIcon EXPAND_ICO = new ImageIcon("src/main/resources/expand_ico.png");
	private static final int BOTTOM_PADDING = 5;
	private boolean collapsed = true;
	private JPanel bodyContainer;
	private JButton btn;
	private JLabel titleLabel;
	private JPanel root;
	private JPanel head;

	Collapsible(String title) {
		this.setLayout(new BorderLayout());
		this.add(root, BorderLayout.CENTER);
		this.setTitle(title);

		bodyContainer.setVisible(false);
		bodyContainer.setLayout(new BorderLayout());
		root.setBorder(new LineBorder(new Color(48, 50, 52), 2, true));
		this.setBorder(new EmptyBorder(0, 0, BOTTOM_PADDING, 0));

		root.setBackground(new Color(48, 50, 52));

		btn.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
		btn.setContentAreaFilled(false);
		btn.addActionListener(event -> act());
		this.putClientProperty("Panel.arc", 999);
		bodyContainer.putClientProperty("Component.arc", 999);
	}

	public void setTitle(String title) {
		titleLabel.setText(title.substring(0, Math.min(40, title.length()))); //trimming is necessary
		titleLabel.setForeground(new Color(74, 136, 199));
	}


	public void setBody(JPanel body) {
		bodyContainer.removeAll();
		bodyContainer.add(body, BorderLayout.CENTER);
		bodyContainer.setVisible(false);
		head.setPreferredSize(new Dimension(bodyContainer.getPreferredSize().width, head.getPreferredSize().height));
	}

	public void removeBody() {
		bodyContainer.removeAll();
		this.setVisible(false);
	}

	private void act() {
		bodyContainer.setVisible(collapsed);
		collapsed = !collapsed;
		btn.setIcon(collapsed ? EXPAND_ICO : COLLAPSE_ICO);
	}

	@Override
	public Dimension getPreferredSize() {
		if (bodyContainer.getComponents().length == 0) {
			return new Dimension();
		}
		return new Dimension(bodyContainer.getPreferredSize().width, root.getPreferredSize().height + BOTTOM_PADDING);
	}


	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		root = new JPanel();
		root.setLayout(new BorderLayout(0, 0));
		root.setBackground(new Color(-13618636));
		head = new JPanel();
		head.setLayout(new GridLayoutManager(1, 3, new Insets(0, 5, 0, 5), -1, -1));
		head.setBackground(new Color(-13618636));
		root.add(head, BorderLayout.NORTH);
		titleLabel = new JLabel();
		titleLabel.setForeground(new Color(-11892537));
		titleLabel.setText("Title");
		head.add(titleLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		btn = new JButton();
		btn.setIcon(new ImageIcon(getClass().getResource("/expand_ico.png")));
		head.add(btn, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		final Spacer spacer1 = new Spacer();
		head.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
		bodyContainer = new JPanel();
		bodyContainer.setLayout(new GridLayoutManager(1, 1, new Insets(10, 10, 10, 10), -1, -1));
		root.add(bodyContainer, BorderLayout.CENTER);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return root;
	}
}
