package com.mamiglia.gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.mamiglia.settings.*;

import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.util.List;
import java.util.logging.Level;

class SourceGUI extends Collapsible {
	public static final int STANDARD_HEIGHT = 200; // this is just a rough estimate of the height in pixels
	private JTextField titleField;
	private JTextField subredditField;
	private JTextField flairField;
	private JComboBox<TIME> timeSelection;
	private JComboBox<SEARCH_BY> sortSelection;
	private JSlider nsfwSlider;
	private JSpinner scoreField;
	private JPanel root;
	private JButton saveSrcBtn;
	private JButton removeSrcBtn;
	private JButton renameSrcBtn;
	private final Source src;

	SourceGUI(Source src) {
		super(src.getName());
		this.src = src;
		$$$setupUI$$$();
		setBody(root);

		nsfwSlider.setLabelTable(new Hashtable<Integer, JLabel>() {{
			put(NSFW_LEVEL.NEVER.getValue(), new JLabel(NSFW_LEVEL.NEVER.toString()));
			put(NSFW_LEVEL.ALLOW.getValue(), new JLabel(NSFW_LEVEL.ALLOW.toString()));
			put(NSFW_LEVEL.ONLY.getValue(), new JLabel(NSFW_LEVEL.ONLY.toString()));
		}});
		saveSrcBtn.addActionListener(e -> saveData());
		removeSrcBtn.addActionListener(e -> {
			Settings.INSTANCE.removeSource(src);
			this.removeBody();
		});
		renameSrcBtn.addActionListener(e -> {
			src.setName(JOptionPane.showInputDialog(this, "Insert new name"));
			this.setTitle(src.getName());
		});

		loadData();
	}

	private void loadData() {
		setTitle(src.getName());
		titleField.setText(String.join(", ", src.getTitles()));
		subredditField.setText(String.join(", ", src.getSubreddits()));
		flairField.setText(String.join(", ", src.getFlairs()));
		timeSelection.setSelectedItem(src.getMaxOldness());
		sortSelection.setSelectedItem(src.getSearchBy());
		scoreField.setValue(src.getMinScore());
		nsfwSlider.setValue(src.getNsfwLevel().getValue());
		GUI.log.debug("Source {}", src.getName() + " loaded");

	}

	private void saveData() {
		if (!titleField.getText().equals(""))
			src.setTitles(new HashSet<>(List.of(titleField.getText().replace(" ", "").split(","))));
		else
			src.setTitles(new HashSet<>());
		if (!subredditField.getText().equals(""))
			src.setSubreddits(new HashSet<>(List.of(subredditField.getText().replace(" ", "").split(","))));
		else
			src.setTitles(new HashSet<>());
		if (!flairField.getText().equals(""))
			src.setFlairs(new HashSet<>(List.of(flairField.getText().replace(" ", "").split(","))));
		else
			src.setTitles(new HashSet<>());
		src.setMaxOldness((TIME) Objects.requireNonNull(timeSelection.getSelectedItem()));
		src.setSearchBy((SEARCH_BY) sortSelection.getSelectedItem());
		src.setMinScore((Integer) scoreField.getValue());
		src.setNsfwLevel(NSFW_LEVEL.valueOf(nsfwSlider.getValue()));
		GUI.log.debug("Source {}", src.getName() + " saved");
	}

	private void createUIComponents() {
		scoreField = new JSpinner(new SpinnerNumberModel(0, 0, 10000, 1));
		timeSelection = new JComboBox<>(TIME.values());
		sortSelection = new JComboBox<>(SEARCH_BY.values());
	}

	public static void main(String[] args) {
		JFrame f = new JFrame();
		f.add(new SourceGUI(new Source()));
		f.setVisible(true);
		f.pack();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		createUIComponents();
		root = new JPanel();
		root.setLayout(new GridLayoutManager(7, 1, new Insets(0, 0, 0, 0), -1, -1));
		final JPanel panel1 = new JPanel();
		panel1.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
		panel1.setToolTipText("A keyword you want to be in the title of the wallpaper. You probably want to leave this blank");
		root.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		final JLabel label1 = new JLabel();
		label1.setText("Titles");
		panel1.add(label1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		titleField = new JTextField();
		titleField.setColumns(30);
		titleField.setInheritsPopupMenu(true);
		titleField.setText("");
		titleField.setToolTipText("A keyword you want to be in the title of the wallpaper. You probably want to leave this blank");
		panel1.add(titleField, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		final Spacer spacer1 = new Spacer();
		panel1.add(spacer1, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
		final Spacer spacer2 = new Spacer();
		panel1.add(spacer2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
		final JPanel panel2 = new JPanel();
		panel2.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
		panel2.setToolTipText("The subreddits where the wallpaper is searched");
		root.add(panel2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		final JLabel label2 = new JLabel();
		label2.setOpaque(true);
		label2.setText("Subreddits");
		label2.setToolTipText("The subreddits where the wallpaper is searched");
		label2.setVerticalAlignment(0);
		panel2.add(label2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		subredditField = new JTextField();
		subredditField.setColumns(30);
		subredditField.setInheritsPopupMenu(false);
		subredditField.setText("wallpaper, wallpapers");
		subredditField.setToolTipText("Format: sub1, sub2, sub3");
		panel2.add(subredditField, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		final Spacer spacer3 = new Spacer();
		panel2.add(spacer3, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
		final Spacer spacer4 = new Spacer();
		panel2.add(spacer4, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
		final JPanel panel3 = new JPanel();
		panel3.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
		panel3.setToolTipText("The flair on the wallpaper you want");
		root.add(panel3, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		final JLabel label3 = new JLabel();
		label3.setText("Flairs");
		label3.setToolTipText("The flair on the wallpaper you want");
		panel3.add(label3, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		flairField = new JTextField();
		flairField.setColumns(30);
		flairField.setEditable(true);
		flairField.setInheritsPopupMenu(false);
		flairField.setText("");
		flairField.setToolTipText("Format: OC, I made this, 1080");
		panel3.add(flairField, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		final Spacer spacer5 = new Spacer();
		panel3.add(spacer5, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
		final Spacer spacer6 = new Spacer();
		panel3.add(spacer6, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
		final JPanel panel4 = new JPanel();
		panel4.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		root.add(panel4, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		final JLabel label4 = new JLabel();
		label4.setText("Posts are at most 1");
		panel4.add(label4);
		panel4.add(timeSelection);
		final JLabel label5 = new JLabel();
		label5.setText("old");
		panel4.add(label5);
		final JPanel panel5 = new JPanel();
		panel5.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		root.add(panel5, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		final JLabel label6 = new JLabel();
		label6.setText("Sort by");
		panel5.add(label6);
		panel5.add(sortSelection);
		final JLabel label7 = new JLabel();
		label7.setText("With minimum score");
		panel5.add(label7);
		scoreField.setInheritsPopupMenu(true);
		scoreField.setToolTipText("Minimum upvotes to select post. Default: 15");
		panel5.add(scoreField);
		final JPanel panel6 = new JPanel();
		panel6.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		panel6.setToolTipText("Never: no NSFW wallpaper will ever be shown\nAllow: NSFW Wallpapers might be shown\nOnly: only NSFW will be shown, warning: Horny!");
		panel6.setVisible(true);
		root.add(panel6, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		final JLabel label8 = new JLabel();
		label8.setText("NSFW:");
		panel6.add(label8);
		nsfwSlider = new JSlider();
		nsfwSlider.setMaximum(1);
		nsfwSlider.setMinimum(-1);
		nsfwSlider.setPaintLabels(true);
		nsfwSlider.setPaintTicks(false);
		nsfwSlider.setPaintTrack(true);
		nsfwSlider.setSnapToTicks(true);
		nsfwSlider.setToolTipText("NEVER: no nsfw wallpaper will ever be shown\nALLOW: nsfw wallpapers might be shown\nONLY: only nsfw will be shown, warning: Horny!");
		nsfwSlider.setValue(0);
		nsfwSlider.setVisible(true);
		panel6.add(nsfwSlider);
		final JPanel panel7 = new JPanel();
		panel7.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		root.add(panel7, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		saveSrcBtn = new JButton();
		saveSrcBtn.setText("Save");
		panel7.add(saveSrcBtn);
		removeSrcBtn = new JButton();
		removeSrcBtn.setText("Remove");
		panel7.add(removeSrcBtn);
		renameSrcBtn = new JButton();
		renameSrcBtn.setText("Rename");
		panel7.add(renameSrcBtn);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return root;
	}
}
